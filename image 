{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyOgRPmed836HsuJecA5JkvV",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/marankri/sakthimaran/blob/main/image%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cCONgZ2KoWXy"
      },
      "outputs": [],
      "source": [
        "!pip install openai==0.28\n",
        "import openai\n",
        "import IPython.display as display\n",
        "\n",
        "# Set your OpenAI API key (Replace with your API key)\n",
        "openai.api_key = \"your_openai_api_key\"\n",
        "\n",
        "def generate_image():\n",
        "    # Get a single-word input from the user\n",
        "    word = input(\"Enter a single word for image generation: \").strip()\n",
        "\n",
        "    # Convert the word into a more descriptive prompt\n",
        "    prompt = f\"A highly detailed and realistic image of {word}. Vibrant colors, professional photography style.\"\n",
        "\n",
        "    # Generate an image using DALLÂ·E\n",
        "    response = openai.Image.create(\n",
        "        prompt=prompt,\n",
        "        n=1,  # Number of images\n",
        "        size=\"1024x1024\"  # Image resolution\n",
        "    )\n",
        "\n",
        "    # Get the image URL\n",
        "    image_url = response['data'][0]['url']\n",
        "\n",
        "    # Display the generated image\n",
        "    display.display(display.Image(url=image_url))\n",
        "    print(f\"Generated Image URL: {image_url}\")\n",
        "\n",
        "# Run the function\n",
        "generate_image()\n",
        "\n"
      ]
    }
  ]
}